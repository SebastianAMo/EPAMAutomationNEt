name: CI Pipeline

on:
  schedule:
    - cron: '0 12 7 * *' 
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs: 
       test_suite:
        description: 'Select Test Suite'
        required: true
        default: 'smoke'
        type: choice
        options:
            - smoke
            - regression
            - all
  
jobs:

  build:  
    name: Build and tests UI and API
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    
    - name: Install Chrome dependencies 
      run: | 
        sudo apt-get update
        sudo apt-get install -y unzip curl
        CHROME_VERSION=$(curl -sS https://omahaproxy.appspot.com/linux | grep stable | cut -d ',' -f 3)
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y
        # Get exact ChromeDriver version matching Chrome
        DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r '.channels.Stable.version')
        wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0

    - name: Install SpecFlow LivingDoc CLI
      run: | 
          dotnet tool install --global SpecFlow.Plus.LivingDoc.CLI
          echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Verify LivingDoc installation
      run: |
        livingdoc --version

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --no-restore

    - name: Execute API tests
      run: dotnet test --no-build --filter "Category=API"
      continue-on-error: true

    - name: Run UI Tests
      run: dotnet test --no-build --filter TestCategory=${{ github.event.inputs.test_suite }} --logger "trx;LogFileName=UIResults.trx" --results-directory ./TestResults
      continue-on-error: true

    - name: Generate LivingDoc Report
      run: | 
        livingdoc test-assembly ./Tests/bin/Debug/net8.0/Tests.dll -t ./Tests/bin/Debug/net8.0/TestExecution.json --output ./TestResults/LivingDocReport.html
        # *.png from Tests/bin/Debug/net8.0 to TestResults
        cp ./Tests/bin/Debug/net8.0/*.png ./TestResults/ || true


    - name: Upload Test results
      uses: actions/upload-artifact@v4
      with:
        name: api-test-logs
        path: |
          Logs/
          Tests/Logs/
          Tests/TestResults/
          TestResults/
